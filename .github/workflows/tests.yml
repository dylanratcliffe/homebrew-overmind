name: brew test-bot
on:
  pull_request_target:
    types:
      - opened
    paths:
      # Only run this for changes to the formula file
      - Formula/overmind-cli.rb'
jobs:
  test-bot:
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-12, macos-13, macos-14]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Cache Homebrew Bundler RubyGems
        id: cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.set-up-homebrew.outputs.gems-path }}
          key: ${{ runner.os }}-rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
          restore-keys: ${{ runner.os }}-rubygems-

      - run: brew test-bot --only-cleanup-before

      - run: brew test-bot --only-setup

      - run: brew test-bot --only-tap-syntax

      - run: brew test-bot --only-formulae --root-url=https://ghcr.io/v2/overmindtech/overmind
        if: github.event_name == 'pull_request'

      - name: Upload bottles as artifact
        if: always() && github.event_name == 'pull_request'
        # Do not upgrade to v4 due to https://github.com/actions/upload-artifact/issues/478
        # Homebrew will need to solve this in the `brew pr-pull` command. We
        # have disabled rennovate for this repo to stop this gettung upgraded
        uses: actions/upload-artifact@v3
        with:
          name: bottles
          path: '*.bottle.*'
  auto-merge:
    runs-on: ubuntu-latest
    needs: test-bot
    permissions: 
      contents: write
      pull-requests: write
      issues: write
    if: github.event_name == 'pull_request'
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Fetch main branch
        run: git fetch origin main
  
      - name: Validate File Changes
        id: validate
        run: |
          #!/bin/bash

          set -e
          set -x

          # Fetch the latest changes from the remote main branch
          git fetch origin main

          # Get the list of changed files in the PR compared to the main branch
          CHANGED_FILES=$(git diff --name-only origin/main...HEAD)

          # Check if only one file is changed and if that file is Formula/overmind-cli.rb
          if [[ "$CHANGED_FILES" != "Formula/overmind-cli.rb" ]]; then
              echo "More than one file is changed or the changed file is not Formula/overmind-cli.rb"
              echo "validation_status=fail" >> $GITHUB_OUTPUT
              exit 0
          fi

          # Get the added and removed lines separately
          ADDED_LINES=$(git diff --unified=0 origin/main...HEAD Formula/overmind-cli.rb | grep -E "^\+" | grep -vE "^\+\+\+")
          REMOVED_LINES=$(git diff --unified=0 origin/main...HEAD Formula/overmind-cli.rb | grep -E "^\-" | grep -vE "^\-\-\-")

          # Count the added and removed lines
          NUM_ADDED_LINES=$(echo "$ADDED_LINES" | wc -l)
          NUM_REMOVED_LINES=$(echo "$REMOVED_LINES" | wc -l)

          # Check if exactly four lines are changed in total (2 added and 2 removed)
          TOTAL_CHANGED_LINES=$((NUM_ADDED_LINES + NUM_REMOVED_LINES))

          if [[ "$TOTAL_CHANGED_LINES" -ne 4 ]]; then
              echo "Exactly four lines should be changed in total (2 added and 2 removed)"
              echo "validation_status=fail" >> $GITHUB_OUTPUT
              exit 0
          fi

          # Define the regex patterns
          URL_REGEX='^\+\s*url\s*"https:\/\/github.com\/overmindtech\/cli\/archive\/refs\/tags\/v[0-9]+\.[0-9]+\.[0-9]+\.tar\.gz"$'
          SHA256_REGEX='^\+\s*sha256\s*"[a-f0-9]{64}"$'

          # Check if added lines match the regex patterns
          URL_MATCH=0
          SHA256_MATCH=0

          while IFS= read -r line; do
              if [[ $line =~ $URL_REGEX ]]; then
                  URL_MATCH=1
              elif [[ $line =~ $SHA256_REGEX ]]; then
                  SHA256_MATCH=1
              fi
          done <<< "$ADDED_LINES"

          if [[ $URL_MATCH -eq 1 && $SHA256_MATCH -eq 1 ]]; then
              echo "validation_status=pass" >> $GITHUB_OUTPUT
              exit 0
          else
              echo "The added lines do not match the expected patterns"
              echo "validation_status=fail" >> $GITHUB_OUTPUT
              exit 0
          fi

      # Tag this PR with pr-pull label only if validation passed
      - name: Tag PR with pr-pull label
        if: steps.validate.outputs.validation_status == 'pass'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['pr-pull']
            })
